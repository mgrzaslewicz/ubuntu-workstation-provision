---
- name: Install jenv
  hosts: all
  tags: java,jenv
  tasks:
    - name: Clone jenv repository
      git:
        repo: https://github.com/jenv/jenv.git
        dest: ~/.jenv
        update: yes
    - name: Make sure .bashrc is present
      file:
        path: ~/.bashrc
        state: touch
        access_time: preserve
        modification_time: preserve
    - name: Make jenv present in PATH in new bash sessions
      lineinfile:
        dest: ~/.bashrc
        line: 'export PATH="$HOME/.jenv/bin:$PATH"'
        state: present
    - name: Set jenv to be loaded in new bash sessions
      lineinfile:
        dest: ~/.bashrc
        line: eval "$(jenv init -)"
        state: present
    - name: Register JDKs in jenv
      shell: eval "$(jenv init -)" && jenv add {{ item }}
      environment:
        PATH: "{{ ansible_env.PATH }}:~/.jenv/bin"
      args:
        executable: /bin/bash
      register: jenv_add
      failed_when: "'not a valid path to java installation' in jenv_add.stdout"
      changed_when: "'already present' not in jenv_add.stdout"
      loop:
        - /usr/lib/jvm/java-1.8.0-openjdk-amd64
        - /usr/lib/jvm/java-1.11.0-openjdk-amd64
        - /usr/lib/jvm/jdk-14
        - /usr/lib/jvm/java-1.17.0-openjdk-amd64
        - /usr/lib/jvm/java-1.21.0-openjdk-amd64
        - /usr/lib/jvm/java-1.23.0-openjdk-amd64
    - name: Enable jenv export plugin
      shell: eval "$(jenv init -)" && jenv enable-plugin export
      register: jenv_enable_plugin
      changed_when: "'already enabled' not in jenv_enable_plugin.stdout"
      environment:
        PATH: "{{ ansible_env.PATH }}:~/.jenv/bin"
      args:
        executable: /bin/bash
    - name: Enable jenv export plugin
      shell: eval "$(jenv init -)" && jenv enable-plugin export
      register: jenv_enable_plugin
      changed_when: "'already enabled' not in jenv_enable_plugin.stdout"
      environment:
        PATH: "{{ ansible_env.PATH }}:~/.jenv/bin"
      args:
        executable: /bin/bash
